# -*- coding: utf-8 -*-
"""function.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AacZ5tsqQIYCbX1PHyYVFI3kwuSFjBtO

#<b> <font color='blue'>吳南烈 函數作業
"""



"""#匯入Google Colab模組"""

from google.colab import drive
drive.mount('/content/drive')  #雲端硬碟掛載

"""#設定資料路徑"""

BasePath = '/content/drive/MyDrive/Python/'
fileName1=BasePath+'supData/data01.txt'
fileName2=BasePath+'supData/data02.txt'

"""#練習01 ~~定義函數 """

def f():
	print('Hello, Python!')

f()     #函數呼叫 call function

"""#練習02 ~~ 設兩個參數"""

def cal_bmi(w, h):
  #print("體重 {:.1f}公斤, 身高 {:.2f}公尺, BMI為 {:.1f}".format(w,h,w/(h**2)))
  print("體重:",w,"公斤")
  print("身高:",h,"公尺")
  print("BMI:%.2f"%(w/(h**2)))

cal_bmi(53, 1.65)
cal_bmi(h=1.85, w=53)

"""#練習03  ~~回傳值"""

from google.colab import drive
drive.mount('/content/drive')

def bmi_level(bmi):
  if bmi < 18.5: return "過輕"
  if 18.5 <= bmi < 24:  return "正常"
  if 24 <= bmi:  return "異常"

def cal_bmic(weight=65, height=1.80): #函數中呼叫其他自定函數
  return weight/(height**2), bmi_level(weight/(height**2))

with open(fileName2, 'r') as f:    # 讀入資料
  for s in f:
    w, h =map(int,s.split())
    bmi, cmt = cal_bmic(weight=w, height=h/100)
    format_str = "體重 {:.1f}公斤, 身高 {:.2f}公分, BMI為 {:.1f} {}"
    print(format_str.format(w,h,bmi, cmt))

"""#<b>問題1

<h3>
<b>請撰寫一程式、呼叫函式compute()，該函式功能為讓使用者輸入系別(Department)、學號(Student ID)和姓名(Name)，並顯示這些訊息。 </b>
<pre>
輸入: 三個字串  
輸出: 系別(Department)
    學號(Student ID)
    姓名(Name)
"""

# 定義函式 compute()
def compute():
  stu_dept=input("dept:")
  stu_id=input("id:")
  stu_name=input("name:")

  print("Department:",stu_dept)
  print("Student ID:",stu_id)
  print("Name:",stu_name)

# call function
compute()

"""#<b>問題2

<b><h3>
請撰寫一程式，將使用者輸入的三個數字(代表一元二次方程式 ax<sup>2</sup>+bx+c=0 的三個係數 a、b、c)作為參數傳遞給一個名為compute() 的函式，該函式回傳方程式的解，如無解則輸出[Your equation has no root.]。
* 提示: 輸出有順序性  </b>
"""

def compute(a,b,c):   #定義compute()
  delta=b**2-4*a*c  #判別式

  if delta<0:   
    return None   #無實根
  elif delta==0:
    return -b/2*a   #重根
  else:
    res1=(-b+delta**0.5)/(2*a) #根1
    res2=(-b-delta**0.5)/(2*a)  #根2
    return str(res1)+","+str(res2)  #回傳兩個根

# 以下為主程式,  輸入 a,b,c 三個係數
a=eval(input("輸入a:"))
b=eval(input("輸入b:"))
c=eval(input("輸入c:"))
result=compute(a,b,c)   #call compute()
if result==None:
  print("Your equation has no root.")
else:
  print("兩根為:",result)